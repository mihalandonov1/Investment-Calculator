{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/react projects/React-course/Investment Calculator/src/App.js\",\n  _s = $RefreshSig$();\nimport Header from \"./Header\";\nimport Form from \"./Form\";\nimport Table from \"./Table\";\nimport { useState } from \"react\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentSavings, setCurrentSavings] = useState(\"\");\n  const [yearlyContribution, setYearlyContribution] = useState(\"\");\n  const [expectedReturn, setExpectedReturn] = useState(\"\");\n  const [duration, setDuration] = useState(\"\");\n  const calculateHandler = userInput => {\n    console.log(currentSavings);\n    // Should be triggered when form is submitted\n    // You might not directly want to bind it to the submit event on the form though...\n\n    const yearlyData = []; // per-year results\n\n    // const yearlyContribution = +userInput[\"yearly-contribution\"]; // as mentioned: feel free to change the shape...\n    // const expectedReturn = +userInput[\"expected-return\"] / 100;\n    // const duration = +userInput[\"duration\"];\n\n    // The below code calculates yearly results (total savings, interest etc)\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      yearlyData.push({\n        // feel free to change the shape of the data pushed to the array!\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution\n      });\n    }\n\n    // do something with yearlyData ...\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      setCurrentSavings: setCurrentSavings,\n      setYearlyContribution: setYearlyContribution,\n      setExpectedReturn: setExpectedReturn,\n      setDuration: setDuration\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/w5ABRDRZy0eZIQTvjvfi9XYBIw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Header","Form","Table","useState","React","jsxDEV","_jsxDEV","App","_s","currentSavings","setCurrentSavings","yearlyContribution","setYearlyContribution","expectedReturn","setExpectedReturn","duration","setDuration","calculateHandler","userInput","console","log","yearlyData","i","yearlyInterest","push","year","savingsEndOfYear","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mac/Desktop/react projects/React-course/Investment Calculator/src/App.js"],"sourcesContent":["import Header from \"./Header\";\nimport Form from \"./Form\";\nimport Table from \"./Table\";\nimport { useState } from \"react\";\nimport React from \"react\";\n\nfunction App() {\n  const [currentSavings, setCurrentSavings] = useState(\"\");\n  const [yearlyContribution, setYearlyContribution] = useState(\"\");\n  const [expectedReturn, setExpectedReturn] = useState(\"\");\n  const [duration, setDuration] = useState(\"\");\n\n  const calculateHandler = (userInput) => {\n    console.log(currentSavings);\n    // Should be triggered when form is submitted\n    // You might not directly want to bind it to the submit event on the form though...\n\n    const yearlyData = []; // per-year results\n\n    // const yearlyContribution = +userInput[\"yearly-contribution\"]; // as mentioned: feel free to change the shape...\n    // const expectedReturn = +userInput[\"expected-return\"] / 100;\n    // const duration = +userInput[\"duration\"];\n\n    // The below code calculates yearly results (total savings, interest etc)\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      yearlyData.push({\n        // feel free to change the shape of the data pushed to the array!\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution,\n      });\n    }\n\n    // do something with yearlyData ...\n  };\n\n  return (\n    <div>\n      <Header />\n      <Form\n        setCurrentSavings={setCurrentSavings}\n        setYearlyContribution={setYearlyContribution}\n        setExpectedReturn={setExpectedReturn}\n        setDuration={setDuration}\n      />\n      <Table />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,UAAU;AAC7B,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,KAAK,MAAM,SAAS;AAC3B,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACQ,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM,CAACU,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMc,gBAAgB,GAAIC,SAAS,IAAK;IACtCC,OAAO,CAACC,GAAG,CAACX,cAAc,CAAC;IAC3B;IACA;;IAEA,MAAMY,UAAU,GAAG,EAAE,CAAC,CAAC;;IAEvB;IACA;IACA;;IAEA;IACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,QAAQ,EAAEO,CAAC,EAAE,EAAE;MACjC,MAAMC,cAAc,GAAGd,cAAc,GAAGI,cAAc;MACtDJ,cAAc,IAAIc,cAAc,GAAGZ,kBAAkB;MACrDU,UAAU,CAACG,IAAI,CAAC;QACd;QACAC,IAAI,EAAEH,CAAC,GAAG,CAAC;QACXC,cAAc,EAAEA,cAAc;QAC9BG,gBAAgB,EAAEjB,cAAc;QAChCE,kBAAkB,EAAEA;MACtB,CAAC,CAAC;IACJ;;IAEA;EACF,CAAC;;EAED,oBACEL,OAAA;IAAAqB,QAAA,gBACErB,OAAA,CAACN,MAAM;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVzB,OAAA,CAACL,IAAI;MACHS,iBAAiB,EAAEA,iBAAkB;MACrCE,qBAAqB,EAAEA,qBAAsB;MAC7CE,iBAAiB,EAAEA,iBAAkB;MACrCE,WAAW,EAAEA;IAAY;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eACFzB,OAAA,CAACJ,KAAK;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACvB,EAAA,CA7CQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AA+CZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}